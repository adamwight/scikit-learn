#!/usr/bin/make -f
# -*- mode: makefile; coding: utf-8 -*-

export PYBUILD_NAME := sklearn

export PYBUILD_TEST_PLUGIN = nose

PACKAGE2_NAME := python-sklearn
PACKAGE3_NAME := python3-sklearn
PACKAGE2_ROOT_DIR := debian/${PACKAGE2_NAME}
PACKAGE3_ROOT_DIR := debian/${PACKAGE3_NAME}

PYVERS  := $(shell pyversions -vr)
PYVER   := $(shell pyversions -vd)

PY3VERS := $(shell py3versions -vr)
PY3VER  := $(shell py3versions -vd)

# FIXME: Can't we make sphinx > 1.1.3 a build requirement?
SPHINX_VER := $(shell python -c 'from sphinx import __version__; print __version__')
NODOC = $(shell dpkg --compare-versions $(SPHINX_VER) lt 1.1.3 && echo "nodoc" || echo "")
export DEB_BUILD_OPTIONS += $(NODOC)

CYTHON_VER := $(shell dpkg -l cython 2>/dev/null | awk '/^ii/{print $$3;}' || echo 0)
RECONF = $(shell dpkg --compare-versions $(CYTHON_VER) ge 0.19 && echo ",autoreconf" || echo "")

# FIXME: Some tests are known to fail randomly so need to be excluded ATM
NOSEARGS := \
	--exclude='test_(gaussian_process|non_meta_estimators)'

# Crank up extra jobs if specified by the environment.
ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
	NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
	MAKEFLAGS += -j$(NUMJOBS)
endif

# Mega rule
%:
	: # Explicit build system to avoid use of all-in-1 Makefile
	dh $@ --buildsystem=pybuild --with python2,python3$(RECONF) --parallel

cythonize:
	@echo "D: removing previously generated by Cython sources"
	find -iname *.c | xargs grep -l 'Generated by Cython' | xargs -r rm
	make cython

override_dh_autoreconf:
	dh_autoreconf debian/rules -- cythonize

override_dh_clean:
	rm -rf build doc/_build doc/auto_examples *-stamp *.egg-info sklearn/datasets/__config__.py
	dh_clean

override_dh_install: ${PYVERS:%=python-install%} ${PY3VERS:%=python3-install%}

# Per Python version logic -- install, test, move .so into -lib
python-install%:
	python$* setup.py install --install-layout=deb --root=$(PACKAGE2_ROOT_DIR)

python3-install%:
	python$* setup.py install --install-layout=deb --root=$(PACKAGE3_ROOT_DIR)

#python-test%: python-install%
#ifeq (,$(filter nocheck,$(DEB_BUILD_OPTIONS)))
#	: # Run unittests here against installed scikits.learn
#	export PYTHONPATH=`/bin/ls -d $$PWD/$(PACKAGE2_ROOT_DIR)/usr/lib/python2*/*/`; \
#	export MPLCONFIGDIR=$(CURDIR)/build HOME=$(CURDIR)/build; \
#	export JOBLIB_MULTIPROCESSING=0; \
#	cd build/; python$* /usr/bin/nosetests -s -v $(NOSEARGS) sklearn && \
#	  { python$* /usr/bin/nosetests -v --with-doctest --doctest-extension=rst ../doc/ || : ; } # doctests are failing ATM
#else
#	: # Skip unittests due to nocheck
#endif
#
#python3-test%: python3-install%
#ifeq (,$(filter nocheck,$(DEB_BUILD_OPTIONS)))
#	: # Run unittests here against installed scikits.learn
#	export PYTHONPATH=`/bin/ls -d $$PWD/$(PACKAGE3_ROOT_DIR)/usr/lib/python3*/*/`; \
#	export MPLCONFIGDIR=$(CURDIR)/build HOME=$(CURDIR)/build; \
#	export JOBLIB_MULTIPROCESSING=0; \
#	cd build/; python$* /usr/bin/nosetests3 -s -v $(NOSEARGS) sklearn && \
#	  { python$* /usr/bin/nosetests3 -v --with-doctest --doctest-extension=rst ../doc/ || : ; } # doctests are failing ATM
#else
#	: # Skip unittests due to nocheck
#endif

## remove .so libraries from main package, and call dh_numpy*
## while removing 2 if present
_dh_python%:
	if [ -d debian/$(PACKAGE$*_NAME)/usr/lib ]; then \
	    find debian/$(PACKAGE$*_NAME)/usr/lib -name "*.so" -delete; \
	fi
	[ -e /usr/bin/dh_numpy$(*:2=) ] && dh_numpy$(*:2=) -p$(PACKAGE$*_NAME)-lib || :
	dh_python$*

## "Instantiate" both rules so dh sees them
override_dh_python2: _dh_python2
override_dh_python3: _dh_python3

override_dh_installdocs:
	: # Build Documentation using installed scikits.learn
ifeq (,$(filter nodoc,$(DEB_BUILD_OPTIONS)))
ifneq (,$(findstring -a,$(DH_INTERNAL_OPTIONS)))
	: # not building documentation in -a
else
	export PYTHONPATH=`/bin/ls -d $$PWD/$(PACKAGE2_ROOT_DIR)/usr/lib/python$(PYVER)/*`; \
	export MPLCONFIGDIR=$(CURDIR)/build HOME=$(CURDIR)/build; \
	 cd doc; $(MAKE) html
endif
else
	mkdir -p doc/_build/html
	echo "<HTML><BODY><P>sklearn documentation was not built.<P>Please visit <A HREF='http://scikit-learn.org'>http://scikit-learn.org</A></BODY></HTML>" >| doc/_build/html/index.html
endif
	: # Use jquery from Debian package, so prune shipped one
	-rm doc/_build/html/_static/jquery.js
	dh_installdocs -A AUTHORS.rst README*.rst

override_dh_installchangelogs:
	dh_installchangelogs doc/whats_new.rst

## immediately useable documentation and exemplar scripts/data
override_dh_compress:
	dh_compress -X.py -X.html -X.pdf -X.css -X.jpg -X.txt -X.js -X.json -X.rtc -Xobjects.inv


## to prepare next Debian upstream source tarball
dfsg: dfsg-releases
dfsg-%:
	git checkout dfsg
	-git merge --no-commit $*
	-git rm -rf sklearn/externals/joblib
	# -git rm -f ./sklearn/svm/src/libsvm/svm.*
	git commit -m "Merge $* into DFSG (pruning externals: joblib)" -a
	git checkout debian
